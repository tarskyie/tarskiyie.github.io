@page "/login"
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject LoginService loginService

@rendermode InteractiveServer

<PageTitle>Вход</PageTitle>

<h3>Войти</h3>

<EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
    <div class="form-group">
        <label>Username</label>
        <InputText @bind-Value="loginModel.Username" class="form-control" />
    </div>
    <div class="form-group">
        <label>Password</label>
        <InputText type="password" @bind-Value="loginModel.Password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Войти</button>

    <p><font color="red">@status</font></p>
</EditForm>
<button @onclick="switchToRegister" class="btn btn-primary">Зарегистрироваться</button>

@code {
    private string status;
    //Это временное решение
    EditForm loginStuff = default!;
    private LoginModel loginModel = new LoginModel();

    protected override async Task OnAfterRenderAsync(bool firstRender){
        var cookies = await localStorage.GetItemAsync<string>("login");
        if (cookies == "user pass"){
            loginService.IsLogin = true;
            NavigationManager.NavigateTo("/profile");
        }
    }

    private class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }

    private async Task HandleLogin()
    {
        var success = await AuthService.Login(loginModel.Username, loginModel.Password);

        if (success)
        {
            await localStorage.SetItemAsync("login", "user pass");
            await localStorage.SetItemAsync("name", loginModel.Username);
            loginService.Name = loginModel.Username;
            await localStorage.SetItemAsync("password", loginModel.Password);
            loginService.Password = loginModel.Password;
            NavigationManager.NavigateTo("/profile");
        }
        else
        {
            status = "Login failed";
            // Handle login failure
        }
    }

    private void switchToRegister(){
        NavigationManager.NavigateTo("/register");
    }
}