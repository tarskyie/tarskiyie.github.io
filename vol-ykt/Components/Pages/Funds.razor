@page "/funds"
@rendermode InteractiveServer
@inject LoginService LoginService
@inject NavigationManager Navigation
@inject Events events

@using System;
@using System.Threading;

<PageTitle>Акции</PageTitle>

<h3>Мероприятия</h3>
<table class="table">
    <thead>
        <tr>
            <th>Организатор</th>
            <th>Название</th>
            <th>Место</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var evt in Events)
        {
            <tr>
                <td>@evt.Organizer</td>
                <td>@evt.Title</td>
                <td>@evt.Location</td>
                <td>
                    <button class="btn btn-success" @onclick="() => RespondToEvent(evt)">Откликнуться</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code{
    protected override void OnInitialized()
    {

        base.OnInitialized();
        _ = CheckLogin();
    }

    protected override Task OnInitializedAsync()
    {
        _ = CheckLogin();
        return base.OnInitializedAsync();
    }

    private async Task CheckLogin(){
        if (LoginService.IsLogin == true)
        {

        }
        else{

            Navigation.NavigateTo("/login");
            await Task.CompletedTask;
        }
    }

    //table
    private List<Events> Events = new List<Events>
    {
        new Events { Organizer = "ООО 'Добро'", Title = "Посадка деревьев", Location = "Сквер Победы" },
        new Events { Organizer = "Yrdel", Title = "Очистка территории", Location = "Ул. Урдзл Парк, 1" }
    };

    private void RespondToEvent(Events evt)
    {
        // Handle the event response logic
        Console.WriteLine($"Responding to: {evt.Title}");
    }
}

